version: "3.8"

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 47Ayan96

  payment-system:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_URL=${DB_URL}
      - AMQP_HOST=${AMQP_HOST}
      - AMQP_PORT=${AMQP_PORT}
      - AMQP_USERNAME=${AMQP_USERNAME}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - QUARKUS_PROFILE=${QUARKUS_PROFILE}
      - STRIPE_ENABLED=${STRIPE_ENABLED}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - PADDLE_ENABLED=${PADDLE_ENABLED}
      - PADDLE_VENDOR_ID=${PADDLE_VENDOR_ID}
      - PADDLE_API_KEY=${PADDLE_API_KEY}
      - PADDLE_SANDBOX_MODE=${PADDLE_SANDBOX_MODE}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/q/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
